version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/data:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./wordpress:/var/www/html:ro
    depends_on:
      - frontend
      - backend
      - wordpress
    restart: always
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/data:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet; done'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    restart: always
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    restart: always
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@backend_db:5432/${POSTGRES_DB}
    depends_on:
      - backend_db
    networks:
      - app-network

  backend_db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - app-network

  wordpress:
    image: wordpress:6.4-fpm-alpine
    restart: always
    environment:
      - WORDPRESS_DB_HOST=wordpress_db
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - wordpress_db
    networks:
      - app-network

  wordpress_db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
      - MYSQL_USER=${WORDPRESS_DB_USER}
      - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_ROOT_PASSWORD}
    volumes:
      - ./wordpress_db:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge